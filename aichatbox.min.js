document.addEventListener("DOMContentLoaded", function () {
    let e = document.getElementById("chat-widget"); if (!e) return; e.innerHTML = `
                <div class="chat-header">
                    <span>BOPO Assistant</span>
                    <button id="chat-close-btn" class="chat-close-btn">&times;</button>
                </div>
                <div class="chat-messages" id="chat-messages">
                    <div id="history-loader"><div class="spinner"></div></div>
                    <div class="chat-loader hidden" id="chat-loader"></div>
                </div>
                <form class="chat-input" id="chat-form">
                    <input type="text" id="message-input" placeholder="Nhập tin nhắn..." autocomplete="off">
                    <button type="submit" disabled>Gửi</button>
                </form>
            `; let t = document.getElementById("chat-toggle"), s = document.getElementById("chat-messages"), a = document.getElementById("chat-form"), n = document.getElementById("message-input"), l = document.getElementById("chat-loader"), i = document.getElementById("chat-close-btn"), o = a.querySelector("button"), r = document.getElementById("history-loader"), d = "http://192.168.2.175:5000/api", c = localStorage.getItem("chatSessionId") || crypto.randomUUID(); localStorage.setItem("chatSessionId", c); let m = 1, h = !1, p = !0; async function g(e) { e ? l.classList.remove("hidden") : r.style.display = "block", h = !0; let t = `${d}/webchat/history/${c}?page=${m}&pageSize=10`; try { let a = await fetch(t); if (!a.ok) { e && f(), p = !1; return } let n = await a.json(), i = n.messages; if (p = n.hasMoreMessages, e && (!i || 0 === i.length)) { f(); return } let o = s.scrollHeight; i.reverse().forEach(e => { y(e.sender.toLowerCase(), e.content, !0, e.timestamp) }), u(), e ? s.scrollTop = s.scrollHeight : s.scrollTop = s.scrollHeight - o, m++ } catch (g) { console.error("Failed to load chat history:", g), e && f() } finally { h = !1, l.classList.add("hidden"), r.style.display = "none" } } function u() { s.querySelectorAll(".date-separator").forEach(e => e.remove()); let e = s.querySelectorAll(".message-wrapper"), t = null; e.forEach(e => { let a = e.dataset.timestamp; if (!a) return; let n = new Date(a), l = n.toDateString(); t !== l && (function e(t, a) { let n = document.createElement("div"); n.classList.add("date-separator"); let l = new Date, i = new Date; i.setDate(i.getDate() - 1), t.toDateString() === l.toDateString() ? n.textContent = "H\xf4m nay" : t.toDateString() === i.toDateString() ? n.textContent = "H\xf4m qua" : n.textContent = t.toLocaleDateString("vi-VN", { weekday: "long", year: "numeric", month: "numeric", day: "numeric" }), s.insertBefore(n, a) }(n, e), t = l) }) } function y(e, t, a = !1, n = null) { let l = document.createElement("div"); l.classList.add("message-wrapper", e); let i = document.createElement("div"); i.classList.add("message"); let o = n || new Date().toISOString(); l.dataset.timestamp = o; let d = document.createElement("div"); d.classList.add("text"), "bot" === e && "..." === t ? d.innerHTML = '<div class="loading-dots"><span></span><span></span><span></span></div>' : d.textContent = t; let c = document.createElement("div"); c.classList.add("message-timestamp"); let m = new Date(o); c.textContent = m.toLocaleTimeString("vi-VN", { hour: "2-digit", minute: "2-digit" }), i.appendChild(d), l.appendChild(i), l.appendChild(c), a ? s.insertBefore(l, r.nextSibling) : (s.appendChild(l), s.scrollTop = s.scrollHeight) } async function v(e) { y("user", e), u(), n.value = "", o.disabled = !0, y("bot", "..."); try { let t = `${d}/webchat`, a = await fetch(t, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ sessionId: c, message: e }) }); if (!a.ok) throw Error("Network response was not ok"); let l = await a.json(); s.removeChild(s.lastChild), y("bot", l.reply) } catch (i) { console.error("Error:", i), s.removeChild(s.lastChild), y("bot", "Xin lỗi, đ\xe3 c\xf3 lỗi xảy ra. Vui l\xf2ng thử lại.") } finally { o.disabled = "" === n.value.trim() } } function f() { 0 === s.querySelectorAll(".message").length && (y("bot", "Ch\xe0o bạn, m\xecnh l\xe0 trợ l\xfd ảo BOPO! M\xecnh c\xf3 thể gi\xfap g\xec cho bạn?"), u()) } t.addEventListener("click", () => { e.classList.toggle("open"), e.classList.contains("open") && 1 === m && !h && g(!0) }), i.addEventListener("click", () => { e.classList.remove("open") }), s.addEventListener("scroll", () => { 0 === s.scrollTop && !h && p && g(!1) }), s.addEventListener("click", e => { let t = e.target.closest(".message-wrapper"); if (!t) return; let s = t.querySelector(".message-timestamp"); s && (document.querySelectorAll(".message-timestamp.show").forEach(e => { e !== s && e.classList.remove("show") }), s.classList.toggle("show")) }), a.addEventListener("submit", e => { e.preventDefault(); let t = n.value.trim(); t && v(t) }), n.addEventListener("input", () => { o.disabled = "" === n.value.trim() })
});